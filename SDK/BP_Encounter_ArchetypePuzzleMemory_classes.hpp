#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x1C8 (0x610 - 0x448)
// BlueprintGeneratedClass BP_Encounter_ArchetypePuzzleMemory.BP_Encounter_ArchetypePuzzleMemory_C
class ABP_Encounter_ArchetypePuzzleMemory_C : public AEncounterBase
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x448(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_EncounterComponent_Spawners_C*     BP_EncounterComponent_Spawners;                    // 0x450(0x8)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          SpawnWaveTimeoutHandle;                            // 0x458(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UEncounterPOIPersistedObject*          Encounter_Persisted_Object;                        // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                        NumRestoredPuzzlePieces;                           // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         bRestoreFromPersistence;                           // 0x46C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_9BA8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       Advertisement_Length;                              // 0x470(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ATargetPoint*>                  Puzzle_Piece_Targets;                              // 0x478(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                          AdvertiseTimerHandle;                              // 0x488(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                        ExpectedIndex;                                     // 0x490(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Puzzle_Index;                                      // 0x494(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Puzzle_Piece_Count;                                // 0x498(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                        Puzzle_Flourish_Index;                             // 0x49C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class ABP_Structure_EncounterTrigger_PuzzleMemory_C*> Puzzle_Pieces;                                     // 0x4A0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       Puzzle_Timeout_Length;                             // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Structure_EncounterTrigger_PuzzleMemoryCentre_C* Puzzle_Centre;                                     // 0x4F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                          PuzzleCompleteTimerHandle;                         // 0x500(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                        PuzzleCompleteDuration;                            // 0x508(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_9BA9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStructureAssetReference              HECU_SDA;                                          // 0x510(0x80)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStructureAssetReference              PuzzlePieces_SDA;                                  // 0x590(0x80)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class ABP_Encounter_ArchetypePuzzleMemory_C* GetDefaultObj();

	void CollectDebuggerShapes(TArray<struct FEncounterDebugLine>* OutDebugLines, TArray<struct FEncounterDebugPoint>* OutDebugPoints, const class FString& MemoryPieceName, const struct FEncounterDebugLine& CurrentDebugLine, const struct FVector& PuzzleCentreTopLocation, const struct FVector& PuzzleCentreHeightOffset, const struct FVector& PuzzlePieceTopLocation, const struct FVector& PuzzlePieceHeightOffset, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CurrentPuzzlePiece, const TArray<struct FEncounterDebugPoint>& DebugPoints, const TArray<struct FEncounterDebugLine>& DebugLines, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class AActor*>& Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FEncounterDebugPoint& K2Node_MakeStruct_EncounterDebugPoint, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, TArray<struct FEncounterDebugLine>& CallFunc_CollectDebuggerShapes_OutDebugLines, TArray<struct FEncounterDebugPoint>& CallFunc_CollectDebuggerShapes_OutDebugPoints, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, const struct FEncounterDebugLine& K2Node_MakeStruct_EncounterDebugLine, class ABP_Structure_EncounterTrigger_PuzzleMemoryCentre_C* CallFunc_Get_Puzzle_Centre_PuzzleCentre, int32 CallFunc_Array_Add_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, TMap<int32, class ABP_Structure_EncounterTrigger_PuzzleMemory_C*> CallFunc_Get_Puzzle_Pieces_PuzzlePieces, TArray<class ABP_Structure_EncounterTrigger_PuzzleMemory_C*>& CallFunc_Map_Values_Values, int32 CallFunc_Array_Length_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void CompletePuzzle(FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	void GetPuzzlePiece_SDA(struct FStructureAssetReference* PuzzlePieces_SDA);
	void GetHECU_SDA(struct FStructureAssetReference* HECU_SDA);
	void SpawnRewardStructure(class UStructureTypeData* DELETEME_TEST, const struct FTransform& HECU_Transform, class AEncounterConfig* CallFunc_GetTargetActor_ReturnValue, TSubclassOf<class IInterface> Temp_class_Variable, class UObject* CallFunc_FindFirstImplementor_ReturnValue, TScriptInterface<class IEncounterMarkupInterface> K2Node_DynamicCast_AsEncounter_Markup_Interface, bool K2Node_DynamicCast_bSuccess, const struct FStructureSpawnContext& K2Node_MakeStruct_StructureSpawnContext, class UEncounterMarkupDataAsset* CallFunc_GetMarkupDataAsset_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UEncounterMarkupDataAsset_Memory* K2Node_DynamicCast_AsEncounter_Markup_Data_Asset_Memory, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue_1, const struct FTransform& CallFunc_GetTransform_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, class UEncounterDataAsset* CallFunc_GetEncounterData_ReturnValue, class AActor* CallFunc_GetDynamicActorAtLocation_Actor, bool CallFunc_GetDynamicActorAtLocation_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemoryCentre_C* K2Node_DynamicCast_AsBP_Structure_Encounter_Trigger_Puzzle_Memory_Centre, bool K2Node_DynamicCast_bSuccess_2, const struct FGameplayTag& CallFunc_Get_Encounter_Palette_AVFXTag_AVFXTag, const struct FStructureEncounterSpawnContext& K2Node_MakeStruct_StructureEncounterSpawnContext, class UObject* CallFunc_SpawnEncounterStructure_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemoryCentre_C* K2Node_DynamicCast_AsBP_Structure_Encounter_Trigger_Puzzle_Memory_Centre_1, bool K2Node_DynamicCast_bSuccess_3);
	double GetPuzzle_Timeout_Length();
	void SetPuzzle_Timeout_Length(double NewValue);
	void Get_Puzzle_Centre(class ABP_Structure_EncounterTrigger_PuzzleMemoryCentre_C** PuzzleCentre);
	void Get_Puzzle_Pieces(TMap<int32, class ABP_Structure_EncounterTrigger_PuzzleMemory_C*>* PuzzlePieces);
	class FString CollectDebuggerInformation(int64 CallFunc_Conv_IntToInt64_ReturnValue, int64 CallFunc_Conv_IntToInt64_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue);
	void Restore_Puzzle_Centre(const struct FTransform& Actor_Transform, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, class AActor* CallFunc_GetDynamicActorAtLocation_Actor, bool CallFunc_GetDynamicActorAtLocation_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemoryCentre_C* K2Node_DynamicCast_AsBP_Structure_Encounter_Trigger_Puzzle_Memory_Centre, bool K2Node_DynamicCast_bSuccess);
	void Puzzle_Timeout(bool CallFunc_IsValid_ReturnValue);
	void Puzzle_Complete(int32 Temp_int_Array_Index_Variable, const struct FTimerHandle& CallFunc_K2_InvalidateTimerHandle_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, TArray<class ABP_Structure_EncounterTrigger_PuzzleMemory_C*>& CallFunc_Map_Values_Values, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void InitializeDesignerPreferences(class UEncounterDataAsset* CallFunc_GetEncounterData_ReturnValue, class UEncounterArchetypeDataAssetPuzzleMemory* K2Node_DynamicCast_AsEncounter_Archetype_Data_Asset_Puzzle_Memory, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Greater_IntInt_ReturnValue, double K2Node_VariableSet_Advertisement_Length_ImplicitCast, double K2Node_VariableSet_Puzzle_Timeout_Length_ImplicitCast);
	void Puzzle_Piece_Interacted(class ABP_Structure_EncounterTrigger_C* Triggering_Structure, int32 Temp_int_Variable, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* K2Node_DynamicCast_AsBP_Structure_Encounter_Trigger_Puzzle_Memory, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	void Register_Puzzle_Pieces(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, TArray<class ABP_Structure_EncounterTrigger_PuzzleMemory_C*>& CallFunc_Map_Values_Values, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void Puzzle_Piece_Destroyed(class AActor* DestroyedActor);
	void ObtainPersistedData(class UEncounterPOIPersistedObject* CallFunc_GetEncounterPersistedObject_EncounterPersistedObject, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_Conv_BoolToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 CallFunc_GetNumMemoryPuzzlePieces_NumPuzzlePieces);
	void StorePersistedData(const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void RestorePuzzlePieces(int32 Temp_int_Array_Index_Variable, bool CallFunc_Map_IsEmpty_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TSubclassOf<class IInterface> Temp_class_Variable, class AEncounterConfig* CallFunc_GetTargetActor_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UObject* CallFunc_FindFirstImplementor_ReturnValue, TScriptInterface<class IEncounterMarkupInterface> K2Node_DynamicCast_AsEncounter_Markup_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, class UEncounterMarkupDataAsset* CallFunc_GetMarkupDataAsset_ReturnValue, class UEncounterMarkupDataAsset_Memory* K2Node_DynamicCast_AsEncounter_Markup_Data_Asset_Memory, bool K2Node_DynamicCast_bSuccess_1, class ATargetPoint* CallFunc_Array_Get_Item, const struct FTransform& CallFunc_GetTransform_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CallFunc_TryReconnectPuzzlePiece_PuzzlePiece, bool CallFunc_IsValid_ReturnValue_3, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_4);
	void TryReconnectPuzzlePiece(const struct FTransform& Transform, class ABP_Structure_EncounterTrigger_PuzzleMemory_C** PuzzlePiece, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* ExistingPuzzlePiece, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, class AActor* CallFunc_GetDynamicActorAtLocation_Actor, bool CallFunc_GetDynamicActorAtLocation_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* K2Node_DynamicCast_AsBP_Structure_Encounter_Trigger_Puzzle_Memory, bool K2Node_DynamicCast_bSuccess);
	void SpawnPuzzlePieces(int32 Temp_int_Array_Index_Variable, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, const struct FSoftObjectPath& CallFunc_GetAssetPathFromStructureAssetReference_ReturnValue, const class FString& CallFunc_BreakSoftObjectPath_PathString, int32 Temp_int_Loop_Counter_Variable, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, class AEncounterConfig* CallFunc_GetTargetActor_ReturnValue, bool CallFunc_IsValid_ReturnValue, TSubclassOf<class IInterface> Temp_class_Variable, class UObject* CallFunc_FindFirstImplementor_ReturnValue, TScriptInterface<class IEncounterMarkupInterface> K2Node_DynamicCast_AsEncounter_Markup_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, class UEncounterMarkupDataAsset* CallFunc_GetMarkupDataAsset_ReturnValue, class UEncounterMarkupDataAsset_Memory* K2Node_DynamicCast_AsEncounter_Markup_Data_Asset_Memory, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class ATargetPoint* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, const struct FStructureSpawnContext& K2Node_MakeStruct_StructureSpawnContext, bool CallFunc_BooleanAND_ReturnValue, const struct FGameplayTag& CallFunc_Get_Encounter_Palette_AVFXTag_AVFXTag, const struct FStructureEncounterSpawnContext& K2Node_MakeStruct_StructureEncounterSpawnContext, class UObject* CallFunc_SpawnEncounterStructure_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* K2Node_DynamicCast_AsBP_Structure_Encounter_Trigger_Puzzle_Memory, bool K2Node_DynamicCast_bSuccess_2);
	void Incorrect_Piece(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class ABP_Structure_EncounterTrigger_PuzzleMemory_C*>& CallFunc_Map_Values_Values, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void Reset_Puzzle(float ResetPuzzleTime, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, TArray<class ABP_Structure_EncounterTrigger_PuzzleMemory_C*>& CallFunc_Map_Values_Values, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void Advertise_Puzzle(int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable, bool CallFunc_Less_IntInt_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class ABP_Structure_EncounterTrigger_PuzzleMemory_C* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	void Start_Puzzle();
	void Punishment();
	void Spawn_Time_Out(const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UEncounterDataAsset* CallFunc_GetEncounterData_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, TArray<class APawn*>& CallFunc_GetPlayersInRange_Players, bool CallFunc_Array_IsNotEmpty_ReturnValue, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	void Enemies_Defeated(bool CallFunc_IsValid_ReturnValue);
	void Spawn_Enemies(class ABP_CreatureSpawnerBase_C* CallFunc_Manually_Spawn_Wave_Spawner_Actor, bool CallFunc_Manually_Spawn_Wave_Spawner_Was_Spawned, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast);
	void CleanupEncounter(bool CallFunc_IsValid_ReturnValue);
	void Initialize(bool CallFunc_IsValid_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate);
	void Fail_Puzzle();
	void BeginEncounter();
	void ExecuteUbergraph_BP_Encounter_ArchetypePuzzleMemory(int32 EntryPoint);
};

}


