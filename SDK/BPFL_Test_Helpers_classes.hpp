#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BPFL_Test_Helpers.BPFL_Test_Helpers_C
class UBPFL_Test_Helpers_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBPFL_Test_Helpers_C* GetDefaultObj();

	void GetRevolverAmmoItemReference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& AmmoReference);
	void Get_Revolver_Item_Reference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& Revolver_Reference);
	void GetGliderItemReference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& GliderReference);
	void RegrowAllResources(class UObject* __WorldContext);
	void Reset_All_Resources(class UObject* __WorldContext, TArray<class ABP_ResourceNode_IIM_C*>& CallFunc_GetAllActorsOfClass_OutActors, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class ABP_ResourceNode_IIM_C* CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void SpawnDefaultPossessedCharacterInDefaultLocation(class UObject* __WorldContext, class ABP_Character_C** SpawnedCharacter, class AController** SpawnedController, bool* Success, class FString* ErrorMessage, const class FString& Error, const struct FTransform& CallFunc_GetDefaultSpawnTransform_DefaultTransform, bool CallFunc_GetDefaultSpawnTransform_Success, const class FString& CallFunc_GetDefaultSpawnTransform_ErrorMessage, class ABP_Character_C* CallFunc_SpawnDefaultPossessedCharacter_SpawnedCharacter, class AController* CallFunc_SpawnDefaultPossessedCharacter_SpawnedController, bool CallFunc_SpawnDefaultPossessedCharacter_bSuccess, const class FString& CallFunc_SpawnDefaultPossessedCharacter_ErrorMessage);
	void GrantRequirementsToPlayer(class ABP_Character_C* Character, TArray<struct FStructureResourceRequirements>& Requirements, class UObject* __WorldContext, bool* Success, class FString* Message, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, const struct FStructureResourceRequirements& CallFunc_Array_Get_Item, int32 CallFunc_GetQuantityRemaining_ReturnValue, const struct FItemDataReference& CallFunc_SLOW_FindItemMeetingRequirements_ItemName, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_GrantItemToPlayer_Success, const class FString& CallFunc_GrantItemToPlayer_Message);
	void GetWoodItemReference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& WoodReference);
	void GetRifleAmmoItemReference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& AmmoReference);
	void GetUnarmedItemReference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& UnarmedReference);
	void Get_Rifle_Item_Reference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& RifleReference);
	void FindAllPiecesOfType(class UClass* PieceClass, class UObject* __WorldContext, TArray<class UObject*>* OutPieces, const TArray<class UBP_StructureCompositePiece_C*>& Pieces, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class UClass* K2Node_ClassDynamicCast_AsActor, bool K2Node_ClassDynamicCast_bSuccess, TArray<class AActor*>& CallFunc_GetAllActorsOfClass_OutActors, bool CallFunc_ClassIsChildOf_ReturnValue, int32 Temp_int_Variable, TArray<class ABP_Structure_Composite_C*>& CallFunc_GetAllActorsOfClass_OutActors_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class ABP_Structure_Composite_C* CallFunc_Array_Get_Item, class UStructureCompositeComponent* CallFunc_GetCompositeComponent_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UStructureCompositePiece* CallFunc_GetCompositePiece_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UBP_StructureCompositePiece_C* K2Node_DynamicCast_AsBP_Structure_Composite_Piece, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Add_ReturnValue, class UClass* CallFunc_GetObjectClass_ReturnValue, int32 CallFunc_GetPieceCount_ReturnValue, bool CallFunc_ClassIsChildOf_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
	void EquipGear(class ABP_Character_C* PlayerCharacter, const struct FItemDataReference& ItemToEquip, class UObject* __WorldContext, bool* Success, class FString* Message, class ABP_EquippableItemBase_C** EquippedItem, const class FString& Error, class UInventoryComponentBase* Inventory, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UInventoryComponentBase* CallFunc_GetComponentByClass_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_GrantItemToPlayer_Success, const class FString& CallFunc_GrantItemToPlayer_Message, TScriptInterface<class IItemContainer> CallFunc_GetBackpack_Container, bool CallFunc_GetBackpack_ReturnValue, const struct FInventoryEntry& CallFunc_FindFirstItemByItemId_Entry, bool CallFunc_FindFirstItemByItemId_ReturnValue, bool CallFunc_EquipNonQuickbarItem_Success, class AEquippableItem* CallFunc_EquipNonQuickbarItem_EquippedItem, class ABP_EquippableItemBase_C* K2Node_DynamicCast_AsBP_Equippable_Item_Base, bool K2Node_DynamicCast_bSuccess);
	void ReleaseBPControllerAbility(class AController* Controller, enum class EInputActionTypes ActionType, class UObject* __WorldContext, bool* Success, class FString* ErrorMessage, class ABP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess);
	void Force_Add_Default_Containers(class APlayerController* PlayerController, class UObject* __WorldContext, bool* Success);
	void GetAxePickItemReference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& AxepickReference);
	void FindFirstTargetActorOfClass(class UClass* TargetActorClass, class UObject* __WorldContext, class ABPTA_TargetingActorLogic_C** TargetActor, const TArray<class ABPTA_TargetingActorLogic_C*>& TargetActors, TArray<class ABPTA_TargetingActorLogic_C*>& CallFunc_GetAllActorsOfClass_OutActors, class ABPTA_TargetingActorLogic_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void Get_Build_Hammer_Reference(class UObject* __WorldContext, struct FItemDataReference* ItemReference, const struct FItemDataReference& BuildHammerReference);
	void MoveCharacterForward(class ABP_Character_C* Character, class UObject* __WorldContext, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue);
	void ExecuteBPControllerAbility(class AController* Controller, enum class EInputActionTypes ActionType, class UObject* __WorldContext, bool* Success, class FString* ErrorMessage, class ABP_PlayerController_C* K2Node_DynamicCast_AsBP_Player_Controller, bool K2Node_DynamicCast_bSuccess);
	void IsValidUniqueId(const class FString& UniqueID, class UObject* __WorldContext, bool* IsValid, bool CallFunc_NotEqual_StrStr_ReturnValue);
	void InitializeRandomPersistentUniqueId(class AController*& Controller, class UObject* __WorldContext, bool* Success, class FString* Message, bool CallFunc_IsValid_ReturnValue, class ANWXPlayerState* K2Node_DynamicCast_AsNWXPlayer_State, bool K2Node_DynamicCast_bSuccess, const class FString& CallFunc_GetPersistentUniqueId_ReturnValue, const struct FGuid& CallFunc_NewGuid_ReturnValue, bool CallFunc_IsValidUniqueId_IsValid, const class FString& CallFunc_Conv_GuidToString_ReturnValue);
	void SetIsDaytime(class ABP_CreatureManager_C* CreatureManager, bool IsDayTime, class UObject* __WorldContext);
	void IsItemEquipped(class AController* Controller, const struct FDataTableRowHandle& ItemId, const struct FItemDataReference& ItemReference, class UObject* __WorldContext, bool* IsEquipped, class FString* Message, class AEquippableItem* Temp_object_Variable, class APawn* CallFunc_K2_GetPawn_ReturnValue, TScriptInterface<class ILoadoutReadInterface> K2Node_DynamicCast_AsLoadout_Read_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, class AEquippableItem* CallFunc_GetEquippedItem_ReturnValue, const struct FItemDataReference& CallFunc_GetItemID_OutItemReference, bool CallFunc_EqualEqual_FItemDataReference_ReturnValue);
	void RemoveAllItemsFromPlayer(class APawn* Pawn, class UObject* __WorldContext, bool* Success, class FString* Message, TScriptInterface<class IItemContainer> Backpack, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Array_Index_Variable, class UObject* CallFunc_Conv_InterfaceToObject_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const class FString& CallFunc_GetFunctionName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_GetFunctionName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FInventoryEntry>& CallFunc_GetAllItems_Entries, class AController* CallFunc_GetController_ReturnValue, const struct FInventoryEntry& CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_RemoveItem_ReturnValue, class UInventoryComponentBase* CallFunc_GetComponentByClass_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, TScriptInterface<class IItemContainerProvider> K2Node_DynamicCast_AsItem_Container_Provider, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, TScriptInterface<class IItemContainer> CallFunc_GetDefaultContainer_ReturnValue, bool CallFunc_IsValid_ReturnValue_3);
	void GrantItemToPlayer(class APawn* Character, const struct FDataTableRowHandle& ItemId, const struct FItemDataReference& ItemReference, int32 ItemCount, class UObject* __WorldContext, bool* Success, class FString* Message, bool CallFunc_IsValid_ReturnValue, TArray<class UItemInstanceData*>& Temp_object_Variable, const struct FInventoryEntry& CallFunc_CreateNewItemEntry_NewEntry, enum class EGetResult CallFunc_CreateNewItemEntry_OutBranch, bool CallFunc_ClaimItem_bSuccess, TArray<struct FGuid>& CallFunc_ClaimItem_ClaimedInstances, TArray<struct FInventoryEntry>& CallFunc_ClaimItem_UnclaimedItems, bool K2Node_SwitchEnum_CmpSuccess);
	TArray<struct FS_InstanceWithQuantity> GetNewItemInstances(int32 NumberOfInstances, class UObject* __WorldContext, const TArray<struct FS_InstanceWithQuantity>& NewInstances, const struct FGuid& CallFunc_NewUniqueInstanceId_InstanceId, const struct FS_InstanceWithQuantity& K2Node_MakeStruct_S_InstanceWithQuantity, int32 Temp_int_Variable, int32 CallFunc_Array_Add_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void EquipItem(class APawn* Character, const struct FItemDataReference& ItemReference, class UObject* __WorldContext, class ABP_EquippableItemBase_C** EquippedItem, bool* Success, class FString* ErrorMessage, class AController* Controller, const struct FInventoryEntry& ItemEntry, TScriptInterface<class IItemContainer> Backpack, class ABP_Character_C* BP_Character, class AEquippableItem* Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, class ABP_EquippableItemBase_C* K2Node_DynamicCast_AsBP_Equippable_Item_Base, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_1, TArray<class UItemInstanceData*>& Temp_object_Variable_1, bool CallFunc_GetItemEquipmentSlotTag_bSuccess, const struct FGameplayTag& CallFunc_GetItemEquipmentSlotTag_EquipmentSlotTag, bool CallFunc_ClaimItem_bSuccess, TArray<struct FGuid>& CallFunc_ClaimItem_ClaimedInstances, TArray<struct FInventoryEntry>& CallFunc_ClaimItem_UnclaimedItems, TScriptInterface<class ILoadoutReadInterface> K2Node_DynamicCast_AsLoadout_Read_Interface, bool K2Node_DynamicCast_bSuccess_1, class AEquippableItem* CallFunc_GetItemInLoadoutSlot_ReturnValue, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, const struct FInventoryEntry& CallFunc_CreateNewItemEntry_NewEntry, enum class EGetResult CallFunc_CreateNewItemEntry_OutBranch, class ABP_Character_C* K2Node_DynamicCast_AsBP_Character, bool K2Node_DynamicCast_bSuccess_2, bool K2Node_SwitchEnum_CmpSuccess);
	void SpawnDefaultPossessedCharacter(const struct FTransform& Location, class UObject* __WorldContext, class ABP_Character_C** SpawnedCharacter, class AController** SpawnedController, bool* bSuccess, class FString* ErrorMessage, class AController* L_Controller, class ABP_Character_C* L_Character, class AController* CallFunc_SpawnDefaultController_SpawnedController, bool CallFunc_SpawnDefaultController_Success, const class FString& CallFunc_SpawnDefaultController_ErrorMessage, class ABP_Character_C* CallFunc_SpawnDefaultCharacter_SpawnedCharacter, bool CallFunc_SpawnDefaultCharacter_Success, const class FString& CallFunc_SpawnDefaultCharacter_ErrorMessage);
	void SpawnDefaultController(const struct FTransform& Location, class UObject* __WorldContext, class AController** SpawnedController, bool* Success, class FString* ErrorMessage, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class APlayerController* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Force_Add_Default_Containers_Success, bool CallFunc_InitializeRandomPersistentUniqueId_Success, const class FString& CallFunc_InitializeRandomPersistentUniqueId_Message);
	void SpawnDefaultCharacter(const struct FTransform& Location, class UObject* __WorldContext, class ABP_Character_C** SpawnedCharacter, bool* Success, class FString* ErrorMessage, const class FString& Error, bool Spawned, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class APawn* CallFunc_FinishSpawningActor_ReturnValue, class ABP_Character_C* K2Node_DynamicCast_AsBP_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void GetDefaultSpawnTransform(class UObject* __WorldContext, struct FTransform* DefaultTransform, bool* Success, class FString* ErrorMessage, const class FString& Error, bool ValidTransform, TArray<class ATargetPoint*>& CallFunc_GetAllActorsOfClass_OutActors, class ATargetPoint* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const struct FTransform& CallFunc_GetTransform_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void ControllerLookAtGround(class AController* Controller, class UObject* __WorldContext, const struct FRotator& CallFunc_MakeRotator_ReturnValue);
};

}


