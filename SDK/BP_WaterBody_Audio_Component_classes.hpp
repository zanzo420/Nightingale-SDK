#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x250 (0x560 - 0x310)
// BlueprintGeneratedClass BP_WaterBody_Audio_Component.BP_WaterBody_Audio_Component_C
class UBP_WaterBody_Audio_Component_C : public UWaterbodyAudioComponent
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x310(0x8)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkAudioEvent*                         AkEvent;                                           // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                         WildlifeOSEvent;                                   // 0x320(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                       EmitterSpacing;                                    // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       EmitterSpeedOld;                                   // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       EmitterDistanceOffsetOld;                          // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               Target_QL;                                         // 0x340(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               Target_QR;                                         // 0x358(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               Target_QLS;                                        // 0x370(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               Target_QRS;                                        // 0x388(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                       Nine0;                                             // 0x3A0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                       One80;                                             // 0x3B0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                       Minus90;                                           // 0x3C0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                       Minus180;                                          // 0x3D0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       DistanceOffsetOld;                                 // 0x3E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                               HeightOffsetOld;                                   // 0x3E8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         StickyEmitterActiveOld;                            // 0x400(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_702D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MergeDistance;                                     // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         UseStickyMode;                                     // 0x410(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         UseOcclusionOld;                                   // 0x411(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         CheckMaterials;                                    // 0x412(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_702E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       PrecipitationAmountLocalOld;                       // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMinRadiusOld;                            // 0x420(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMaxRadiusOld;                            // 0x428(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMaxDelayTime_Desert;                     // 0x430(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMinDelayTime_Desert;                     // 0x438(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMaxDelayTime_Forest;                     // 0x440(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMinDelayTime_Forest;                     // 0x448(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMaxDelayTime_Swamp;                      // 0x450(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMinDelayTime_Swamp;                      // 0x458(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMaxDelayTime;                            // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       WildlifeOSMinDelayTime;                            // 0x468(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                       StickyModeNonOccludedLocOld;                       // 0x470(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                       GridSpreadDistOld;                                 // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          Ak_QuadL;                                          // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          Ak_QuadR;                                          // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          Ak_QuadLS;                                         // 0x498(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                          Ak_QuadRS;                                         // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                         QL_Active;                                         // 0x4A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QR_Active;                                         // 0x4A9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QLS_Active;                                        // 0x4AA(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QRS_Active;                                        // 0x4AB(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QL_InAngle;                                        // 0x4AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QR_InAngle;                                        // 0x4AD(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QLS_InAngle;                                       // 0x4AE(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QRS_InAngle;                                       // 0x4AF(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                       QL_OcclusionGrid;                                  // 0x4B0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                       QR_OcclusionGrid;                                  // 0x4C0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                       QLS_OcclusionGrid;                                 // 0x4D0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                       QRS_OcclusionGrid;                                 // 0x4E0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                         QL_InCloseProxMode;                                // 0x4F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_702F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MaxTravelDistanceOld;                              // 0x4F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QR_InCloseProxMode;                                // 0x500(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QLS_InCloseProxMode;                               // 0x501(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QRS_InCloseProxMode;                               // 0x502(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QL_RainActive;                                     // 0x503(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QR_RainActive;                                     // 0x504(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QLS_RainActive;                                    // 0x505(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QRS_RainActive;                                    // 0x506(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         UseWindSpeed;                                      // 0x507(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                       HailAmountOld;                                     // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QL_HailActive;                                     // 0x510(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QR_HailActive;                                     // 0x511(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QLS_HailActive;                                    // 0x512(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         QRS_HailActive;                                    // 0x513(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7030[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OffsetVector;                                      // 0x518(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAmbienceManager*                      CachedAmbienceManager;                             // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                               CameraLocation;                                    // 0x538(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                         IsPosInWater;                                      // 0x550(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                        Pad_7031[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkSwitchValue*                        BiomeSwitch;                                       // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

	static class UClass* StaticClass();
	static class UBP_WaterBody_Audio_Component_C* GetDefaultObj();

	void GetCachedAmbienceManager(class UAmbienceManager** AmbienceManager, class UAmbienceManager* CallFunc_GetAmbienceManager_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void UpdateWindSpeed(class UAmbienceManager* CallFunc_GetCachedAmbienceManager_AmbienceManager);
	void Trace_for_Occlusion(class UAkComponent* AkComponent, TArray<struct FVector>& OcclusionGrid, bool IsStickyEmitter, const TArray<struct FVector>& TraceLocations, int32 InvalidHitCount, int32 TraceHitCount, int32 TraceCount, const TArray<enum class EObjectTypeQuery>& TraceObjects, bool CallFunc_IsValid_ReturnValue, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void GetWaterBodyTypeVariables(const struct FS_WaterBodyAudioProperties& TableRow, const struct FS_WaterBodyAudioProperties& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, const struct FS_WaterBodyAudioProperties& CallFunc_GetDataTableRowFromName_OutRow_1, bool CallFunc_GetDataTableRowFromName_ReturnValue_1, bool CallFunc_GetBiomeAudioSwitch_Success, class UAkSwitchValue* CallFunc_GetBiomeAudioSwitch_Switch, const struct FS_WaterBodyAudioProperties& CallFunc_GetDataTableRowFromName_OutRow_2, bool CallFunc_GetDataTableRowFromName_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FS_WaterBodyAudioProperties& CallFunc_GetDataTableRowFromName_OutRow_3, bool CallFunc_GetDataTableRowFromName_ReturnValue_3, class AActor* CallFunc_GetOwner_ReturnValue, class AWaterIslandShores* K2Node_DynamicCast_AsWater_Island_Shores, bool K2Node_DynamicCast_bSuccess, class AWaterBodyRiver* K2Node_DynamicCast_AsWater_Body_River, bool K2Node_DynamicCast_bSuccess_1, class AWaterBodyLake* K2Node_DynamicCast_AsWater_Body_Lake, bool K2Node_DynamicCast_bSuccess_2, class AWaterBodyOcean* K2Node_DynamicCast_AsWater_Body_Ocean, bool K2Node_DynamicCast_bSuccess_3, float K2Node_VariableSet_EmitterSpeed_ImplicitCast, float K2Node_VariableSet_EmitterDifferenceOffset_ImplicitCast, float K2Node_VariableSet_GridSpreadDist_ImplicitCast, float K2Node_VariableSet_WildlifeOSMinRadius_ImplicitCast, float K2Node_VariableSet_WildlifeOSMaxRadius_ImplicitCast);
	void SetBiomeOSDelayTimes(double Temp_real_Variable, double Temp_real_Variable_1, double Temp_real_Variable_2, double Temp_real_Variable_3, double Temp_real_Variable_4, double Temp_real_Variable_5, double Temp_real_Variable_6, double Temp_real_Variable_7, enum class EBiomeID Temp_byte_Variable, double Temp_real_Variable_8, double Temp_real_Variable_9, double Temp_real_Variable_10, double Temp_real_Variable_11, double Temp_real_Variable_12, double Temp_real_Variable_13, double Temp_real_Variable_14, double Temp_real_Variable_15, double Temp_real_Variable_16, enum class EBiomeID Temp_byte_Variable_1, double Temp_real_Variable_17, bool CallFunc_IsValid_ReturnValue, class ANWXWorldSettings* CallFunc_GetWorldSettings_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, double K2Node_Select_Default, double K2Node_Select_Default_1);
	void Update_Precipitation(class UAmbienceManager* CallFunc_GetCachedAmbienceManager_AmbienceManager);
	void DrawDebugSpheres(const struct FLinearColor& ColorRS, const struct FLinearColor& ColorLS, const struct FLinearColor& ColorR, const struct FLinearColor& ColorL);
	void Raycast_for_Materials(const TArray<enum class EObjectTypeQuery>& TraceObjects, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array);
	void StartOcclusionScan();
	void UpdateEmitterLocations();
	void StartDistanceCheck();
	void ReceiveBeginPlay();
	void ShowWaterAudioDebug(bool Draw_Debug_Sphere);
	void ShowWaterAudioOcclusionDebug(bool ShowInfo);
	void TriggerWildlifeOneShotLoopWrapper();
	void SwitchOnEPhysicalSurfaceAndSetRTPCsWrapper(struct FHitResult& HitResult, class UAkComponent* AkComponent);
	void ExecuteUbergraph_BP_WaterBody_Audio_Component(int32 EntryPoint, double CallFunc_RandomFloatInRange_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GetCameraWorldLocation_Success, const struct FVector& CallFunc_GetCameraWorldLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue, TArray<struct FVector>& CallFunc_TrySortSplinePointsToQuadrants_OutForwardLeft, TArray<struct FVector>& CallFunc_TrySortSplinePointsToQuadrants_OutForwardRight, TArray<struct FVector>& CallFunc_TrySortSplinePointsToQuadrants_OutBackLeft, TArray<struct FVector>& CallFunc_TrySortSplinePointsToQuadrants_OutBackRight, bool CallFunc_TrySortSplinePointsToQuadrants_OutWorldPosIsInWater, bool CallFunc_TrySortSplinePointsToQuadrants_ReturnValue, bool CallFunc_IsServer_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class USplineComponent* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, bool K2Node_CustomEvent_Draw_Debug_Sphere, bool K2Node_CustomEvent_ShowInfo, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_2, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_4, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_5, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_6, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_7, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, double CallFunc_RandomFloatInRange_ReturnValue_1, class UAVFXEnvironmentSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, const struct FHitResult& K2Node_Event_HitResult, class UAkComponent* K2Node_Event_AkComponent, TArray<struct FVector>& CallFunc_TrySortCoastlinePointsToQuadrants_OutForwardLeft, TArray<struct FVector>& CallFunc_TrySortCoastlinePointsToQuadrants_OutForwardRight, TArray<struct FVector>& CallFunc_TrySortCoastlinePointsToQuadrants_OutBackLeft, TArray<struct FVector>& CallFunc_TrySortCoastlinePointsToQuadrants_OutBackRight, bool CallFunc_TrySortCoastlinePointsToQuadrants_IsPosInWater, bool CallFunc_TrySortCoastlinePointsToQuadrants_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, class FName CallFunc_BreakHitResult_BoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_IsValid_ReturnValue_6, const class FString& CallFunc_SurfaceTypeToString_AsString, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FS_AudioMaterialContexts& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_GetBiomeAudioSwitch_Success, class UAkSwitchValue* CallFunc_GetBiomeAudioSwitch_Switch, class UAmbienceManager* CallFunc_GetCachedAmbienceManager_AmbienceManager, bool CallFunc_NotEqual_ByteByte_ReturnValue, double CallFunc_RandomFloat_ReturnValue, double CallFunc_RandomFloat_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_2, double CallFunc_RandomFloat_ReturnValue_2, double CallFunc_RandomFloat_ReturnValue_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_4, double CallFunc_RandomFloatInRange_ReturnValue_2, double CallFunc_RandomFloatInRange_ReturnValue_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_5, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_6, double CallFunc_RandomFloatInRange_ReturnValue_4, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_7, float CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast, float CallFunc_CheckQuadDistance_MergeDistance_ImplicitCast, float CallFunc_CheckQuadDistance_MergeDistance_ImplicitCast_1, float CallFunc_CheckQuadDistance_MergeDistance_ImplicitCast_2, float CallFunc_CheckQuadDistance_MergeDistance_ImplicitCast_3, double CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast, float CallFunc_Delay_Duration_ImplicitCast, float CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast_1, float CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast_2, float CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast_3, float CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast_4, float CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast_5, float CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast_6, float CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast_7);
};

}


